HTML:

<!DOCTYPE html>
<html>
<head>
	<title>Challenge</title>
	<link rel="stylesheet" type="text/css" href="Challenge.css">
	<link href="https://fonts.googleapis.com/css2?family=Modak&display=swap" rel="stylesheet">
</head>
<body>
	<div class="parent">
		<div class="center">
			<button id="getPosts">GET</button>
			<button id="getID12">GET ID 12</button>
			<button id="getID12COMMENTS">12's Comments</button>
			<button id="getComments">GET SPECIFIC</button>
			<button id="createPosts">CREATE</button>
			<button id="updatePosts">UPDATE</button>
			<button id="deletePosts">DELETE</button>
			<button id="showPosts">SHOW POST</button>
			<button id="Number">50</button>
			<button id="sortCaps">MAKE CAPS</button>
		</div>
	</div>

<script src="Challenge.js"></script>
</body>
</html>

>>>>>>>>>>>>>>>>>>>>>>>>>>>>

CSS:


body {
	background: rgb(9,121,108);
background: linear-gradient(90deg, rgba(9,121,108,1) 28%, rgba(2,0,36,1) 28%, rgba(0,212,255,1) 100%);
}

button{
	color: 	#147a80;
	margin: 10px;
	font-size: 20px;
	font-family: 'Modak', cursive;
	text-align: center;
	box-shadow: 3px 3px 6px blue, 5px 7px 7px red, 8px 9px 8px green; 
}

.parent{
	text-align: center;
}

.center{
	display: inline-block;
}



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

JAVASCRIPT:

const ajaxCall = () => {
	// GET to retrieve all posts
	fetch("https://jsonplaceholder.typicode.com/todos")
	.then(response => response.json())
	.then(json = console.log(json))
}

const ajaxCall12 = () => {
	// GET to retrieve all posts
	fetch("https://jsonplaceholder.typicode.com/todos12")
	.then(response => response.json())
	.then(json = console.log(json))
}

const ajaxCallPost12Comment = () => {
    fetch("https://jsonplaceholder.typicode.com/posts?userId=12")
    .then(response => response.json())
    .then(json => console.log(json))
}

const ajaxCallSpecific = () => {
	// GET retrieves the post with specific URI (in thsi case id = 10)
	fetch("https://jsonplaceholder.typicode.com/todos6")
	.then(response => response.json())
	.then(json = console.log(json))
}

// POST adds a random id to te object sent
const ajaxPostRequest = () => {
	fetch("https://jsonplaceholder.typicode.com/todos", {
		method: 'POST',
		body: JSON.stringify({
			title: 'clean room',
			completed: true,
			userId: 3
		}),
		headers: {
			"Content-type": "application/json; charset=UTF-8"
		}
	})
	.then(response => response.json())
	.then(json => console.log(json))
}

const ajaxPutRequest = () => {
	fetch("https://jsonplaceholder.typicode.com/todos/5", {
		method: 'PUT',
		body: JSON.stringify({
			id: 5,
			title: 'hello task',
			completed: false,
			userId: 1
		}),
		headers: {
			"Content-type": "application/json; charset=UTF-8"
		}
	})
	.then(response => response.json())
	.then(json => console.log(json))
}

const ajaxDeleteRequest = () => {
	fetch("https://jsonplaceholder.typicode.com/todos/5", {
		method: 'PUT'
	})
// empty response
}

const render = () => {
	fetch('http://jsonplaceholder.typicode.com/users')
    .then(res => res.json())
    .then(data => {
      // Traditional for loop
      var all = "";
      for (var i = 0; i < data.length; i++) {
        console.log(data[i]);
        all += "<p>" + "SUCCESS " + data[i].name + "</p>";
        console.log(all);
      }
    });

}

// A promise that tests if a number is greater than or less than 50
const testNumb = (num) => new Promise ((resolve, reject) => {
  if (num > 50) {
    resolve('greater than fifty')
  } else if (num < 50) {
  	resolve('less than fifty')
  } else {
    reject('the number is equal to 50')
  }
})

testNumb(2)
    .then(function(value) {
  console.log(value)
})
.catch(function(error) {
  console.log(error)
})



let animals = ['monkey', 'fish', 'bird', 'tiger']
const makeAllCapz = (words) => 
  new Promise ((resolve, reject) => {
    if (words.every(word => typeof word === 'string')){
      resolve(words.map(word => word.toUpperCase()))
    } else {
      reject(Error('this method requires type STRING'))
    }

    makeAllCaps(animals)
  .then(words => sortWords(words))
  .then(result => console.log(result))
  .catch(error => console.log(error))
  })

 
const sortWords = (words) => {
  return words.sort((a, b) => {
    if (a > b){
      return 1
    } else {
      return -1
    }
  })
}


let getPosts = document.getElementById("getPosts");
let get12 = document.getElementById("getID12");
let getID12COMMENTS = document.getElementById("getID12COMMENTS");
let getComments = document.getElementById("getComments");
let createPosts = document.getElementById("createPosts");
let updatePosts = document.getElementById("updatePosts");
let deletePosts = document.getElementById("deletePosts");
let showPosts = document.getElementById("showPosts");
let testNum = document.getElementById("Number");
let makeAllCaps = document.getElementById("sortCaps");

getPosts.addEventListener("click", ajaxPostRequest);
getComments.addEventListener("click", ajaxCallSpecific);
createPosts.addEventListener("click", ajaxPostRequest);
updatePosts.addEventListener("click", ajaxPutRequest);
deletePosts.addEventListener("click", ajaxDeleteRequest);
showPosts.addEventListener("click", render);
testNum.addEventListener("click", testNumb);
makeAllCaps.addEventListener("click", makeAllCapz);
get12.addEventListener("click", ajaxCall12);
getID12COMMENTS.addEventListener("click", ajaxCallPost12Comment);
