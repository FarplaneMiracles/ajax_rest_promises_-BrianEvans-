HTML:

<!DOCTYPE html>
<html>
<head>
	<title>Challenge</title>
	<link rel="stylesheet" type="text/css" href="Challenge.css">
</head>
<body>
	<div class="parent">
		<div class="center">
			<button id="getPosts">GET</button>
			<button id="getComments">GET SPECIFIC</button>
			<button id="createPosts">CREATE</button>
			<button id="updatePosts">UPDATE</button>
			<button id="deletePosts">DELETE</button>
			<button id="showPosts">SHOW POST</button>
			<button id="Number">50</button>
			<button id="sortCaps">MAKE CAPS</button>
		</div>
	</div>

<script src="Challenge.js"></script>
</body>
</html>

>>>>>>>>>>>>>>>>>>>>>>>>>>>>

CSS:


body {
	background-color: rgba(24, 22, 58, .7);
}
button{
	font-size: 20px;
	text-align: center;
	box-shadow: 5px 5px 8px blue, 15px 10px 8px red, 15px 15px 8px green; 
}

.parent{
	text-align: center;
}

.center{
	display: inline-block;
}

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

JAVASCRIPT:

const ajaxCall = () => {
	// GET to retrieve all posts
	fetch("https://jsonplaceholder.typicode.com/todos")
	.then(response => response.json())
	.then(json = console.log(json))
}

const ajaxCallSpecific = () => {
	// GET retrieves the post with specific URI (in thsi case id = 10)
	fetch("https://jsonplaceholder.typicode.com/todos6")
	.then(response => response.json())
	.then(json = console.log(json))
}

// POST adds a random id to te object sent
const ajaxPostRequest = () => {
	fetch("https://jsonplaceholder.typicode.com/todos", {
		method: 'POST',
		body: JSON.stringify({
			title: 'clean room',
			completed: true,
			userId: 3
		}),
		headers: {
			"Content-type": "application/json; charset=UTF-8"
		}
	})
	.then(response => response.json())
	.then(json => console.log(json))
}

const ajaxPutRequest = () => {
	fetch("https://jsonplaceholder.typicode.com/todos/5", {
		method: 'PUT',
		body: JSON.stringify({
			id: 5,
			title: 'hello task',
			completed: false,
			userId: 1
		}),
		headers: {
			"Content-type": "application/json; charset=UTF-8"
		}
	})
	.then(response => response.json())
	.then(json => console.log(json))
}

const ajaxDeleteRequest = () => {
	fetch("https://jsonplaceholder.typicode.com/todos/5", {
		method: 'PUT'
	})
// empty response
}

const render = () => {
	fetch('http://jsonplaceholder.typicode.com/users')
    .then(res => res.json())
    .then(data => {
      // Traditional for loop
      var all = "";
      for (var i = 0; i < data.length; i++) {
        console.log(data[i]);
        all += "<p>" + "Name: " + data[i].name + "</p>";
        console.log(all);
      }
    });

}

// A promise that tests if a number is greater than or less than 50
const testNumb = (num) => new Promise ((resolve, reject) => {
  if (num > 50) {
    resolve('greater than fifty')
  } else if (num < 50) {
  	resolve('less than fifty')
  } else {
    reject('the number is equal to 50')
  }
})



let animals = ['monkey', 'fish', 'bird', 'tiger', 3]
const makeAllCapz = (words) => 
  new Promise ((resolve, reject) => {
    if (words.every(word => typeof word === 'string')){
      resolve(words.map(word => word.toUpperCase()))
    } else {
      reject(Error('this method requires type STRING'))
    }
  })

const sortWords = (words) => {
  return words.sort((a, b) => {
    if (a > b){
      return 1
    } else {
      return -1
    }
  })
}


let getPosts = document.getElementById("getPosts");
let getComments = document.getElementById("getComments");
let createPosts = document.getElementById("createPosts");
let updatePosts = document.getElementById("updatePosts");
let deletePosts = document.getElementById("deletePosts");
let showPosts = document.getElementById("showPosts");
let testNum = document.getElementById("Number");
let makeAllCaps = document.getElementById("sortCaps");

getPosts.addEventListener("click", ajaxPostRequest);
getComments.addEventListener("click", ajaxCallSpecific);
createPosts.addEventListener("click", ajaxPostRequest);
updatePosts.addEventListener("click", ajaxPutRequest);
deletePosts.addEventListener("click", ajaxDeleteRequest);
showPosts.addEventListener("click", render);
testNum.addEventListener("click", testNumb);
makeAllCaps.addEventListener("click", makeAllCapz);
